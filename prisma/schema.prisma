// Generator for Prisma Client
generator client {
  provider = "prisma-client-js" // Specifies the Prisma Client to be used
}

// Datasource Configuration
datasource db {
  provider = "mysql"           // Change to "postgresql" if you're using PostgreSQL
  url      = env("DATABASE_URL") // Reads database connection string from .env
}


// Event Table
model Event {
  id             Int      @id @default(autoincrement())
  title          String
  content        String
  coverImage     String
  showOnHomepage Boolean  @default(false)
  gallery        EventGallery[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

// Event Gallery Table
model EventGallery {
  id       Int    @id @default(autoincrement())
  imagePath String
  eventId  Int
  event    Event  @relation(fields: [eventId], references: [id], onDelete: Cascade,onUpdate: Cascade) // Foreign Key
}

// User Table
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique // Unique email for each user
  password  String   // Hashed password
  username  String   @unique // Unique username
  role_id    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role Role? @relation(fields: [role_id], references: [id], onDelete: Cascade,onUpdate: Cascade)
}


// Reset password tokens Table
model PasswordTokens {
  id        Int      @id @default(autoincrement())
  token      String  @unique
  createdAt DateTime @default(now())
}



model Permissions {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Role Role[]
}
model Role{
  id          Int           @id @default(autoincrement())
  name        String        @unique
  permissions Permissions[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  User User[]
}



model ContactMe {
  id          Int       @id @default(autoincrement())
  name        String
  email       String
  message     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Zaga Mall models
model Store {
  id          Int      @id @default(autoincrement())
  name        String
  category    String
  location    String
  description String   @db.Text
  imagePath   String?
  isShowInHome Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Dining {
  id          Int      @id @default(autoincrement())
  name        String
  category    String
  location    String
  description String   @db.Text
  hours       String?
  rating      Float?
  imagePath   String?
  isShowInHome Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Promotion {
  id          Int      @id @default(autoincrement())
  title       String
  period      String?
  stores      String?
  description String   @db.Text
  imagePath   String?
  isShowInHome Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model AboutSection {
  id          Int      @id @default(autoincrement())
  sectionName String   @unique
  content     String   @db.Text
  imagePath   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TeamMember {
  id        Int      @id @default(autoincrement())
  name      String
  position  String
  bio       String   @db.Text
  imagePath String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FAQ {
  id        Int      @id @default(autoincrement())
  question  String
  answer    String   @db.Text
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ContactInquiry {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  subject   String
  message   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HomeSetting {
  id              Int      @id @default(autoincrement())
  heroTitle       String?
  heroSubtitle    String?
  heroImage       String?
  quickInfoTitle  String?
  quickInfoContent String?  @db.Text
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}